name: Test posgresSQL versions

# manually triggered workflow
# - 5 * 2 * 2 = 20 jobs are triggered
# - So many jobs take too much time

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
        fail-fast: false
        matrix:
          psql: [10]
          postgis: [2.5]
          os: [ubuntu-latest, ubuntu-18.04]

    steps:
      - uses: actions/checkout@v2

      - name: get postgres version
        run: |
          sudo service postgresql start
          pgver=$(psql --version | grep -Po '(?<=psql \(PostgreSQL\) )[^;]+(?=\.\d \()')
          echo "PGVER=${pgver}" >> $GITHUB_ENV
          PGP=5433
          if [ "${{ matrix.psql }}" == "${pgver}" ]; then PGP=5432; fi
          echo "PGPORT=${PGP}" >> $GITHUB_ENV

      - name: Add PostgreSQL APT repository
        run: |
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ \
            $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            liblwgeom-dev \
            libproj-dev \
            libjson-c-dev \
            postgresql-${{ matrix.psql }} \
            postgresql-${{ matrix.psql }}-postgis-${{ matrix.postgis }} \
            postgresql-${{ matrix.psql }}-postgis-${{ matrix.postgis }}-scripts \
            postgresql-server-dev-${{ matrix.psql }}
          ls /usr/lib/postgresql/${{ matrix.psql }}/lib/postgis*
          xzcat --version

      - name: Configure for gcc
        run: |
          export PATH=/usr/lib/postgresql/${{ matrix.psql }}/bin:$PATH
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make -j 4
          sudo make install

      - name: Test
        run: |
          export PATH="/usr/lib/postgresql/${{ matrix.psql }}/bin:$PATH"
          cd build
          make test
